name: Test
on:
  push:
    branches: '**'

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    env:
      # For some builds, we use cross to test on 32-bit and big-endian
      # systems.
      CARGO: cargo
      # When CARGO is set to CROSS, this is set to `--target matrix.target`.
      TARGET_FLAGS: ""
      # When CARGO is set to CROSS, TARGET_DIR includes matrix.target.
      TARGET_DIR: ./target
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    strategy:
      fail-fast: false
      matrix:
        build: [linux, macos, win-msvc]
        include:
        - build: linux
          os: ubuntu-20.04
          target: x86_64-unknown-linux-musl
        - build: macos
          os: macos-12
          target: x86_64-apple-darwin
        - build: win-msvc
          os: windows-2022
          target: x86_64-pc-windows-msvc

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Cache Rust artifacts
      id: cache-rust
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Nix
      if: matrix.build != 'win-msvc'
      uses: cachix/install-nix-action@v18
      with:
        nix_path: nixpkgs=channel:nixos-22.05

    - name: Install packages (Ubuntu)
      if: matrix.build == 'linux'
      run: |
        ci/ubuntu-install-packages

    - name: Install Rust
      if: matrix.build == 'win-msvc'
      uses: dtolnay/rust-toolchain@e645b0cf01249a964ec099494d38d2da0f0b349f
      with:
        toolchain: stable
        targets: ${{ matrix.target }}

    - name: Use Cross
      if: matrix.build == 'win-msvc' && steps.cache-rust.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cargo install cross
        echo "CARGO=cross" >> $GITHUB_ENV
        echo "TARGET_FLAGS=--target ${{ matrix.target }}" >> $GITHUB_ENV
        echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV

    - name: Show command used for Cargo
      if: matrix.build == 'win-msvc'
      run: |
        echo "cargo command is: ${{ env.CARGO }}"
        echo "target flag is: ${{ env.TARGET_FLAGS }}"
        echo "target dir is: ${{ env.TARGET_DIR }}"

    - name: Test release binary (Linux)
      if: matrix.build == 'linux'
      run: nix develop -c cargo test --verbose --release

    - name: Test release binary (macOS)
      if: matrix.build == 'macos'
      run: nix develop -c cargo test --verbose --release
      env:
        TEST_SRVC_DISABLE_TIMEOUT: 1

    - name: Test release binary (Windows)
      if: matrix.build == 'win-msvc'
      run: ${{ env.CARGO }} test --verbose --release ${{ env.TARGET_FLAGS }}
      env:
        TEST_SRVC_DISABLE_TIMEOUT: 1
